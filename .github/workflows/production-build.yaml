name: Production Build

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "release"
    types:
      - closed

env:
  IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/python-app
  IMAGE_LATEST: ${{ secrets.DOCKER_HUB_USERNAME }}/python-app:latest

jobs:
  # (A) 테스트 Job
  test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: python-example
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      - name: Run Tests
        run: |
          pytest test/ --cov=src --cov-report=xml

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: python-example/coverage.xml
          slug: inerplat/fastcampus-devops-testcode-example

  # (B) 빌드 & 태그 & 이미지 푸시
  build-tag-push:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # 1) Semver 태그 자동 생성 (mathieudutour/github-tag-action)
      - name: Bump version and push tag
        id: version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: "release"
          default_bump: false
          # 커밋 메시지에 fix: -> patch, feat: -> minor 등 이용 시 설정 가능

      - name: Check new_tag
        id: check_tag
        run: |
          if [ "${{ steps.version.outputs.new_tag }}" = "" ]; then
            echo "NO_NEW_TAG=true" >> $GITHUB_ENV
          else
            echo "NO_NEW_TAG=false" >> $GITHUB_ENV
            echo "NEW_TAG=${{ steps.version.outputs.new_tag }}" >> $GITHUB_ENV

      - name: Build & push Docker
        if: env.NO_NEW_TAG == 'false'
        uses: docker/build-push-action@v6
        with:
          context: python-example
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ${{ env.IMAGE_LATEST }},${{ env.IMAGE }}:${{ env.NEW_TAG }}

