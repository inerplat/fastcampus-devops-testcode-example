name: Python Release Production

on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  checks: write
  contents: write

jobs:
  # 1) 테스트 Job (CI)
  test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: python-example
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      - name: Run Tests
        run: |
          pytest test/ --cov=src --cov-report=xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: inerplat/fastcampus-devops-testcode-example
          files: python-example/coverage.xml

  # 2) 컨테이너 빌드와 헬름 values 업데이트를 한 곳에서 처리
  container-and-helm:
    needs: test
    runs-on: ubuntu-22.04
    if: github.event_name != 'pull_request'  # PR에선 빌드/배포 안 하겠다는 조건이라면 유지
    steps:
      # (A) Git Checkout
      - uses: actions/checkout@v3

      # (B) Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # (C) Docker 태그 설정
      - name: Set Docker tag
        id: set-tag
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "IMAGE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV
          fi

      # (D) Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # (E) Docker 이미지 빌드 & 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: python-example
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.IMAGE_TAG }}

      # (F) yq 설치 (Helm values 수정용)
      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      # (G) Helm values.yaml 업데이트
      - name: Update Helm values.yaml
        run: |
          echo "IMAGE_TAG=${{ env.IMAGE_TAG }}"
          # k8s/chart/python/values.yaml 파일의 .image.tag 필드를 변경
          yq eval -i '.image.tag = env(IMAGE_TAG)' 'k8s/chart/python/values.yaml'

      # (H) 변경사항 커밋 & 푸시
      - name: Commit and Push changes
        run: |
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "Github Actions"
          git add k8s/chart/python/values.yaml
          git commit -m "Update image tag to ${{ env.IMAGE_TAG }}"
          git push origin HEAD:main
