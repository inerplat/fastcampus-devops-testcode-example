name: Python Release Production

on:
  push:
    tags:
      - "*"
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  checks: write
  contents: write  
jobs:
  test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: python-example
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov

      - name: Run Tests
        run: |
          pytest test/ --cov=src --cov-report=xml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: inerplat/fastcampus-devops-testcode-example
          files: python-example/coverage.xml

  container:
    needs: test
    runs-on: ubuntu-22.04
    if: github.event_name != 'pull_request'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Docker tag
        id: tag
        run: |
          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            echo "tag=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "tag=${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV
          fi

          echo "TAG={$GITHUB_ENV}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: python-example
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ env.tag }}-python

  update-helm-values:
    name: Update Helm Values with New Image Tag
    needs: container
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    steps:
      - name: Checkout Helm Repo
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Install yq
        run: |
          sudo apt-get update && sudo apt-get install -y jq
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq

      - name: Update Helm values.yaml
        env:
          IMAGE_TAG: ${{ needs.container.outputs.TAG }}
        run: |
          yq eval -i '.image.tag = env(IMAGE_TAG)' 'k8s/chart/python/values.yaml'

      - name: Commit and Push changes
        env:
          IMAGE_TAG: ${{ env.tag }}
        run: |
          cd helm-repo
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "Github Actions"
          git add k8s/chart/python/values.yaml
          git commit -m "Update image tag to $IMAGE_TAG"
          git push origin HEAD:main

